<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>github配置webhook实现博客自动部署</title>
    <url>/2021/09/25/github%E9%85%8D%E7%BD%AEwebhook%E5%AE%9E%E7%8E%B0%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<p>因为经常更新博客，每次都需要手动push，再从github上pull到主机，重复操作很麻烦，因此配置webhook实现自动部署，<br>解放双手！</p>
<h3 id="在主机中写入server-js文件"><a href="#在主机中写入server-js文件" class="headerlink" title="在主机中写入server.js文件"></a>在主机中写入server.js文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var http = require(&#x27;http&#x27;)</span><br><span class="line">  , exec = require(&#x27;exec&#x27;)</span><br><span class="line"> </span><br><span class="line">const PORT = 9988</span><br><span class="line">  , PATH = &#x27;../html&#x27;</span><br><span class="line"> </span><br><span class="line">var deployServer = http.createServer(function(request, response) &#123;</span><br><span class="line">  if (request.url.search(/deploy\/?$/i) &gt; 0) &#123;</span><br><span class="line"> </span><br><span class="line">    var commands = [</span><br><span class="line">      &#x27;cd &#x27; + PATH,</span><br><span class="line">      &#x27;git fetch --all&#x27;,</span><br><span class="line">      &#x27;git reset --hard origin/master&#x27;,</span><br><span class="line">      &#x27;git pull origin master&#x27;</span><br><span class="line">    ].join(&#x27; &amp;&amp; &#x27;)</span><br><span class="line"> </span><br><span class="line">    exec(commands, function(err, out, code) &#123;</span><br><span class="line">      if (err instanceof Error) &#123;</span><br><span class="line">        response.writeHead(500)</span><br><span class="line">        response.end(&#x27;Server Internal Error.&#x27;)</span><br><span class="line">        throw err</span><br><span class="line">      &#125;</span><br><span class="line">      process.stderr.write(err)</span><br><span class="line">      process.stdout.write(out)</span><br><span class="line">      response.writeHead(200)</span><br><span class="line">      response.end(&#x27;Deploy Done.&#x27;)</span><br><span class="line"> </span><br><span class="line">    &#125;)</span><br><span class="line"> </span><br><span class="line">  &#125; else &#123;</span><br><span class="line"> </span><br><span class="line">    response.writeHead(404)</span><br><span class="line">    response.end(&#x27;Not Found.&#x27;)</span><br><span class="line"> </span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line">deployServer.listen(PORT)</span><br></pre></td></tr></table></figure>
<h3 id="后台启动server-js"><a href="#后台启动server-js" class="headerlink" title="后台启动server.js"></a>后台启动server.js</h3><p>因为直接使用node server.js ，可能会被杀掉进程，不能保持运行，所以使用pm2来管理进程，<br>(或者使用forever)<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install pm2 -g</span><br></pre></td></tr></table></figure><br>另外使用server_run.js脚本来启动server.js<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//run</span><br><span class="line">const &#123; exec &#125; = require(&#x27;child_process&#x27;)</span><br><span class="line">exec(&#x27;node server.js&#x27;,(error, stdout, stderr) =&gt; &#123;</span><br><span class="line">        if(error)&#123;</span><br><span class="line">                console.log(&#x27;exec error: $&#123;error&#125;&#x27;)</span><br><span class="line">                return</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(&#x27;stdout: $&#123;stdout&#125;&#x27;);</span><br><span class="line">        console.log(&#x27;stderr: $&#123;stderr&#125;&#x27;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>将server_run.js添加到pm2进程<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pm2 start server_run.js  // 启动服务</span><br><span class="line"> </span><br><span class="line">sudo pm2 save // 保存服务</span><br><span class="line"> </span><br><span class="line">sudo pm2 startup // 把已启动服务加到systemd中</span><br><span class="line"> </span><br><span class="line">sudo systemctl reboot // 重启，发现之前的服务都已经启动</span><br><span class="line"> </span><br><span class="line">sudo pm2 unstartup systemd // 删除自动启动服务</span><br></pre></td></tr></table></figure></p>
<h3 id="使用forever保持进程"><a href="#使用forever保持进程" class="headerlink" title="使用forever保持进程"></a>使用forever保持进程</h3><p>安装forever<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g forever</span><br></pre></td></tr></table></figure><br>运行<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">forever start server.js</span><br></pre></td></tr></table></figure></p>
<p>好了，server.js监听9988端口，<a href="https://github.com/[">https://github.com/[</a> 用户名 ]/[ 仓库名称 ]/settings/hooks中<br>添加<a href="http://198.168.xxx.xxx:9988/deploy/">http://198.168.xxx.xxx:9988/deploy/</a><br>当本地Push仓库后，github会自动发送请求从而实现自动部署</p>
]]></content>
      <tags>
        <tag>github</tag>
        <tag>webhook</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker下安装mysql</title>
    <url>/2021/09/24/Docker%E4%B8%8B%E5%AE%89%E8%A3%85mysql/</url>
    <content><![CDATA[<p>###拉取mysql镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull mysql</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -p 3306:3306 \</span><br><span class="line">--privileged=true  --restart=always --name mysql \</span><br><span class="line">-v /mydata/mysql/log:/var/log/mysql \</span><br><span class="line">-v /mydata/mysql/data:/var/lib/mysql \</span><br><span class="line">-v /mydata/mysql/conf:/etc/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=root \</span><br><span class="line">-d mysql:latest</span><br></pre></td></tr></table></figure>

<p>###mysql配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">init_connect=&#x27;SET collation_connection = utf8_unicode_ci&#x27;</span><br><span class="line">init_connect=&#x27;SET NAMES utf8&#x27;</span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_unicode_ci</span><br><span class="line">skip-character-set-client-handshake</span><br><span class="line">skip-name-resolve</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>docker</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/05/14/hello-world/</url>
    <content><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h3><div class="tabs" id="unique-name"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#unique-name-1"><i class="icon]"></i>[Tab caption] [</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="unique-name-1"><p>Any content (support inline tags too).</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<p>Unique name   : Unique name of tabs block tag without comma.<br>                Will be used in #id’s as prefix for each tab with their index numbers.<br>                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.<br>                Only for current url of post/page must be unique!<br>[index]       : Index number of active tab.<br>                If not specified, first tab (1) will be selected.<br>                If index is -1, no tab will be selected. It’s will be something like spoiler.<br>                Optional parameter.<br>[Tab caption] : Caption of current tab.<br>                If not caption specified, unique name with tab index suffix will be used as caption of tab.<br>                If not caption specified, but specified icon, caption will empty.<br>                Optional parameter.<br>[@icon]       : FontAwesome icon name (full-name, look like ‘fas fa-font’)<br>                Can be specified with or without space; e.g. ‘Tab caption @icon’ similar to ‘Tab caption@icon’.<br>                Optional parameter.</p>
<h3 id="demo1"><a href="#demo1" class="headerlink" title="demo1"></a>demo1</h3><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="demo2"><a href="#demo2" class="headerlink" title="demo2"></a>demo2</h3><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="demo3"><a href="#demo3" class="headerlink" title="demo3"></a>demo3</h3><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<h3 id="demo4"><a href="#demo4" class="headerlink" title="demo4"></a>demo4</h3><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>
<h3 id="demo5"><a href="#demo5" class="headerlink" title="demo5"></a>demo5</h3><a class="btn-beautify button--animated [color] [style] [layout] [position] [size]" href="/%5Burl%5D" 
  title="[text]"><i class="[icon]"></i><span>[text]</span></a>
<p>[url]         : 链接<br>[text]        : 按钮文字<br>[icon]        : [可选] 图标<br>[color]       : [可选] 按钮背景顔色(默认style时）<br>                      按钮字体和边框顔色(outline时)<br>                      default/blue/pink/red/purple/orange/green<br>[style]       : [可选] 按钮样式 默认实心<br>                      outline/留空<br>[layout]      : [可选] 按钮佈局 默认为line<br>                      block/留空<br>[position]    : [可选] 按钮位置 前提是设置了layout为block 默认为左边<br>                      center/right/留空<br>[size]        : [可选] 按钮大小<br>                      larger/留空</p>
<h3 id="demo6"><a href="#demo6" class="headerlink" title="demo6"></a>demo6</h3><img class="inline-img" src="/%5Bsrc%5D" style="height:[height]"/>
<p>[src]      :    图片链接<br>[height]   ：   图片高度限制【可选】</p>
<h3 id="demo7"><a href="#demo7" class="headerlink" title="demo7"></a>demo7</h3><p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。<br>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
  </entry>
  <entry>
    <title>Docker下安装wordpress</title>
    <url>/2021/09/24/Docker%E4%B8%8B%E5%AE%89%E8%A3%85wordpress/</url>
    <content><![CDATA[<h3 id="拉取wordpress镜像"><a href="#拉取wordpress镜像" class="headerlink" title="拉取wordpress镜像"></a>拉取wordpress镜像</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull wordpress</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">--name wordpress \</span><br><span class="line">--link mysql:mysql \</span><br><span class="line">-p 80:80 \</span><br><span class="line">-p 443:443 \</span><br><span class="line">-v /var/www/html:/var/www/html \</span><br><span class="line">-v /root/ssl:/ssl \</span><br><span class="line">wordpress</span><br></pre></td></tr></table></figure>
<h3 id="Docker内不能直接使用vi-vim命令，添加apt源"><a href="#Docker内不能直接使用vi-vim命令，添加apt源" class="headerlink" title="Docker内不能直接使用vi vim命令，添加apt源"></a>Docker内不能直接使用vi vim命令，添加apt源</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line"></span><br><span class="line">echo &quot;deb http://mirrors.ustc.edu.cn/debian stable main contrib non-free&quot; &gt; /etc/apt/sources.list \</span><br><span class="line">echo &quot;deb http://mirrors.ustc.edu.cn/debian stable-updates main contrib non-free&quot; &gt;&gt; /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install vim</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>docker</tag>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title>newpage</title>
    <url>/2021/05/14/newpage/</url>
    <content><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="demo1"><a href="#demo1" class="headerlink" title="demo1"></a>demo1</h3><div class="note flat"><p>默认 提示块标籤</p>
</div>
<div class="note default flat"><p>default 提示块标籤</p>
</div>
<div class="note primary flat"><p>primary 提示块标籤</p>
</div>
<div class="note success flat"><p>success 提示块标籤</p>
</div>
<div class="note info flat"><p>info 提示块标籤</p>
</div>
<div class="note warning flat"><p>warning 提示块标籤</p>
</div>
<div class="note danger flat"><p>danger 提示块标籤</p>
</div>
<div class="note icon flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p>
</div>
<div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p>
</div>
<div class="note pink icon flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p>
</div>
<div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p>
</div>
<div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p>
</div>
<div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p>
</div>
<div class="note green icon flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p>
</div>
<h3 id="demo2"><a href="#demo2" class="headerlink" title="demo2"></a>demo2</h3><div class="gallery-group-main">

  <figure class="gallery-group">
  <img class="gallery-group-img" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">壁纸</div>
  <p>收藏的一些壁纸</p>
  <a href='/Gallery/wallpaper'></a>
  </figcaption>
  </figure>
  

  <figure class="gallery-group">
  <img class="gallery-group-img" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">漫威</div>
  <p>关于漫威的图片</p>
  <a href='/Gallery/marvel'></a>
  </figcaption>
  </figure>
  

  <figure class="gallery-group">
  <img class="gallery-group-img" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">OH MY GIRL</div>
  <p>关于OH MY GIRL的图片</p>
  <a href='/Gallery/ohmygirl'></a>
  </figcaption>
  </figure>
  
</div>

<div class="justified-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg" alt=""></p>
          </div>
<h3 id="demo3"><a href="#demo3" class="headerlink" title="demo3"></a>demo3</h3><p>哪个英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #FF7242;color: #fff">查看答案
  </button><span class="hide-content">因为西装裤(C装酷)</span></span></p>
<p>门里站着一个人? <span class="hide-inline"><button type="button" class="hide-button button--animated" style="">Click
  </button><span class="hide-content">闪</span></span></p>
<div class="mermaid">pie
    title Key elements in Product X
    &quot;Calcium&quot; : 42.96
    &quot;Potassium&quot; : 50.05
    &quot;Magnesium&quot; : 10.01
    &quot;Iron&quot; :  5</div>
]]></content>
      <categories>
        <category>Linux系统</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>主题</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx开启https配置</title>
    <url>/2021/09/24/nginx%E5%BC%80%E5%90%AFhttps%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="nginx已经安装配置后"><a href="#nginx已经安装配置后" class="headerlink" title="nginx已经安装配置后"></a>nginx已经安装配置后</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /usr/local/nginx/conf/nginx.conf #编辑nginx.conf配置文件</span><br></pre></td></tr></table></figure>
<h2 id="https"><a href="#https" class="headerlink" title="https"></a>https</h2><h3 id="加入如下配置"><a href="#加入如下配置" class="headerlink" title="加入如下配置"></a>加入如下配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl default;</span><br><span class="line">    server_name _;</span><br><span class="line">    ssl_certificate      /etc/nginx/cert/***.pem;</span><br><span class="line">    ssl_certificate_key  /etc/nginx/cert/***.key;</span><br><span class="line">    return 444;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       443 ssl; #监听443端口</span><br><span class="line">    server_name  www.***.com; #访问的域名</span><br><span class="line">    ssl_certificate      /usr/local/nginx/conf/cert/*.pem;  	#ssl证书路径 [注]docker下nginx需填写容器内部路径</span><br><span class="line">    ssl_certificate_key  /usr/local/nginx/conf/cert/*.key;</span><br><span class="line">    ssl_session_timeout  5m;</span><br><span class="line"> </span><br><span class="line">    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    ssl_prefer_server_ciphers  on;</span><br><span class="line"> </span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header Host  $http_host;</span><br><span class="line">        proxy_set_header X-Nginx-Proxy true;</span><br><span class="line">        proxy_set_header Connection &quot;&quot;;</span><br><span class="line">        proxy_pass http://127.0.0.1:3000; #代理通过的端口</span><br><span class="line">        proxy_redirect default;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80; #监听80端口</span><br><span class="line">    server_name www.***.com; #访问的域名</span><br><span class="line">    rewrite ^(.*)$  https://$&#123;server_name&#125;$1 permanent;  #重定向到https</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="http配置"><a href="#http配置" class="headerlink" title="http配置"></a>http配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80 default_server;</span><br><span class="line">    server_name  _;</span><br><span class="line">    return 444;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen      80;</span><br><span class="line">    server_name www.***.com ***.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">       proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">       proxy_set_header Host  $http_host;</span><br><span class="line">       proxy_set_header X-Nginx-Proxy true;</span><br><span class="line">       proxy_set_header Connection &quot;&quot;;</span><br><span class="line">       proxy_pass http://127.0.0.1:4000;</span><br><span class="line">       proxy_redirect default;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>niginx</tag>
        <tag>https</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx配置正向代理</title>
    <url>/2021/11/07/nginx%E9%85%8D%E7%BD%AE%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<h2 id="centos7安装nginx"><a href="#centos7安装nginx" class="headerlink" title="centos7安装nginx"></a>centos7安装nginx</h2><h3 id="下载nginx"><a href="#下载nginx" class="headerlink" title="下载nginx"></a>下载nginx</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget  http://nginx.org/download/nginx-x.x.x.tar.gz</span><br></pre></td></tr></table></figure>
<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -xzvf nginx-x.x.x.tar.gz</span><br></pre></td></tr></table></figure>
<h3 id="安装编译环境"><a href="#安装编译环境" class="headerlink" title="安装编译环境"></a>安装编译环境</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd nginx-x.x.x</span><br><span class="line">yum update</span><br><span class="line">yum -y install gcc pcre pcre-devel zlib zlib-devel openssl openssl-devel</span><br></pre></td></tr></table></figure>
<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make &amp; make install</span><br></pre></td></tr></table></figure>
<h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx -V</span><br></pre></td></tr></table></figure>
<h3 id="输出如下："><a href="#输出如下：" class="headerlink" title="输出如下："></a>输出如下：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nginx version: nginx/1.14.0</span><br><span class="line">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-28) (GCC) </span><br><span class="line">built with OpenSSL 1.0.2k-fips  26 Jan 2017</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --user=www --group=www --prefix=/usr/local/nginx --with-http_ssl_module --with-http_stub_status_module --with-threads</span><br></pre></td></tr></table></figure>
<h3 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln -s /usr/local/nginx/sbin/nginx /usr/bin/nginx</span><br></pre></td></tr></table></figure>
<h3 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/init.d/nginx</span><br></pre></td></tr></table></figure>
<h3 id="输入如下内容"><a href="#输入如下内容" class="headerlink" title="输入如下内容"></a>输入如下内容</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">#</span><br><span class="line"># nginx - this script starts and stops the nginx daemon</span><br><span class="line">#</span><br><span class="line"># chkconfig:   - 85 15</span><br><span class="line"># description:  NGINX is an HTTP(S) server, HTTP(S) reverse \</span><br><span class="line">#               proxy and IMAP/POP3 proxy server</span><br><span class="line"># processname: nginx</span><br><span class="line"># config:      /usr/local/nginx/conf/nginx.conf</span><br><span class="line"># config:      /etc/sysconfig/nginx</span><br><span class="line"># pidfile:     /usr/local/nginx/logs/nginx.pid</span><br><span class="line"># Source function library.</span><br><span class="line">. /etc/rc.d/init.d/functions</span><br><span class="line"># Source networking configuration.</span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"># Check that networking is up.</span><br><span class="line">[ &quot;$NETWORKING&quot; = &quot;no&quot; ] &amp;&amp; exit 0</span><br><span class="line">nginx=&quot;/usr/local/nginx/sbin/nginx&quot;</span><br><span class="line">prog=$(basename $nginx)</span><br><span class="line">NGINX_CONF_FILE=&quot;/usr/local/nginx/conf/nginx.conf&quot;</span><br><span class="line">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx</span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line">make_dirs() &#123;</span><br><span class="line">   # make required directories</span><br><span class="line">   user=`$nginx -V 2&gt;&amp;1 | grep &quot;configure arguments:&quot; | sed &#x27;s/[^*]*--user=\([^ ]*\).*/\1/g&#x27; -`</span><br><span class="line">   if [ -z &quot;`grep $user /etc/passwd`&quot; ]; then</span><br><span class="line">       useradd -M -s /bin/nologin $user</span><br><span class="line">   fi</span><br><span class="line">   options=`$nginx -V 2&gt;&amp;1 | grep &#x27;configure arguments:&#x27;`</span><br><span class="line">   for opt in $options; do</span><br><span class="line">       if [ `echo $opt | grep &#x27;.*-temp-path&#x27;` ]; then</span><br><span class="line">           value=`echo $opt | cut -d &quot;=&quot; -f 2`</span><br><span class="line">           if [ ! -d &quot;$value&quot; ]; then</span><br><span class="line">               # echo &quot;creating&quot; $value</span><br><span class="line">               mkdir -p $value &amp;&amp; chown -R $user $value</span><br><span class="line">           fi</span><br><span class="line">       fi</span><br><span class="line">   done</span><br><span class="line">&#125;</span><br><span class="line">start() &#123;</span><br><span class="line">    [ -x $nginx ] || exit 5</span><br><span class="line">    [ -f $NGINX_CONF_FILE ] || exit 6</span><br><span class="line">    make_dirs</span><br><span class="line">    echo -n $&quot;Starting $prog: &quot;</span><br><span class="line">    daemon $nginx -c $NGINX_CONF_FILE</span><br><span class="line">    retval=$?</span><br><span class="line">    echo</span><br><span class="line">    [ $retval -eq 0 ] &amp;&amp; touch $lockfile</span><br><span class="line">    return $retval</span><br><span class="line">&#125;</span><br><span class="line">stop() &#123;</span><br><span class="line">    echo -n $&quot;Stopping $prog: &quot;</span><br><span class="line">    killproc $prog -QUIT</span><br><span class="line">    retval=$?</span><br><span class="line">    echo</span><br><span class="line">    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile</span><br><span class="line">    return $retval</span><br><span class="line">&#125;</span><br><span class="line">restart() &#123;</span><br><span class="line">    configtest || return $?</span><br><span class="line">    stop</span><br><span class="line">    sleep 1</span><br><span class="line">    start</span><br><span class="line">&#125;</span><br><span class="line">reload() &#123;</span><br><span class="line">    configtest || return $?</span><br><span class="line">    echo -n $&quot;Reloading $prog: &quot;</span><br><span class="line">    killproc $nginx -HUP</span><br><span class="line">    RETVAL=$?</span><br><span class="line">    echo</span><br><span class="line">&#125;</span><br><span class="line">force_reload() &#123;</span><br><span class="line">    restart</span><br><span class="line">&#125;</span><br><span class="line">configtest() &#123;</span><br><span class="line">  $nginx -t -c $NGINX_CONF_FILE</span><br><span class="line">&#125;</span><br><span class="line">rh_status() &#123;</span><br><span class="line">    status $prog</span><br><span class="line">&#125;</span><br><span class="line">rh_status_q() &#123;</span><br><span class="line">    rh_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">    start)</span><br><span class="line">        rh_status_q &amp;&amp; exit 0</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        rh_status_q || exit 0</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    restart|configtest)</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    reload)</span><br><span class="line">        rh_status_q || exit 7</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    force-reload)</span><br><span class="line">        force_reload</span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        rh_status</span><br><span class="line">        ;;</span><br><span class="line">    condrestart|try-restart)</span><br><span class="line">        rh_status_q || exit 0</span><br><span class="line">            ;;</span><br><span class="line">    *)</span><br><span class="line">        echo $&quot;Usage: $0 &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;&quot;</span><br><span class="line">        exit 2</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>
<h3 id="赋予脚本可执行权限"><a href="#赋予脚本可执行权限" class="headerlink" title="赋予脚本可执行权限"></a>赋予脚本可执行权限</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod a+x /etc/init.d/nginx</span><br></pre></td></tr></table></figure>
<h3 id="将nginx服务加入chkconfig管理列表"><a href="#将nginx服务加入chkconfig管理列表" class="headerlink" title="将nginx服务加入chkconfig管理列表"></a>将nginx服务加入chkconfig管理列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chkconfig --add /etc/init.d/nginx</span><br><span class="line">chkconfig nginx on</span><br></pre></td></tr></table></figure>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl localhost:80</span><br></pre></td></tr></table></figure>
<h3 id="会有如下输出"><a href="#会有如下输出" class="headerlink" title="会有如下输出"></a>会有如下输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    body &#123;</span><br><span class="line">        width: 35em;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        font-family: Tahoma, Verdana, Arial, sans-serif;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<h3 id="配置优化"><a href="#配置优化" class="headerlink" title="配置优化"></a>配置优化</h3><p>下列配置在nginx.conf里与http节点同级<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/nginx/conf</span><br><span class="line">vim nginx.conf</span><br><span class="line">user  www www;</span><br><span class="line">worker_processes auto;</span><br><span class="line">worker_rlimit_nofile 51200;</span><br><span class="line"></span><br><span class="line">events</span><br><span class="line">    &#123;</span><br><span class="line">        use epoll;</span><br><span class="line">        worker_connections 51200;</span><br><span class="line">        multi_accept on;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>http节点下加入下列配置，将会从指定目录加载配置文件<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include /etc/nginx/*.conf;</span><br></pre></td></tr></table></figure></p>
<h2 id="对于安装模块开启https正向代理"><a href="#对于安装模块开启https正向代理" class="headerlink" title="对于安装模块开启https正向代理"></a>对于安装模块开启https正向代理</h2><h3 id="模块的github仓库"><a href="#模块的github仓库" class="headerlink" title="模块的github仓库"></a>模块的github仓库</h3><p><a href="https://github.com/chobits/ngx_http_proxy_connect_module">https://github.com/chobits/ngx_http_proxy_connect_module</a></p>
<h3 id="查询对应nginx版本"><a href="#查询对应nginx版本" class="headerlink" title="查询对应nginx版本"></a>查询对应nginx版本</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">patch -p1 &lt; /path/to/ngx_http_proxy_connect_module/patch/proxy_connect.patch</span><br></pre></td></tr></table></figure>
<p>[注]这里proxy_connect.patch对应nginx版本<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./configure \</span><br><span class="line">--prefix=/usr/local/nginx \</span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-http_stub_status_module \</span><br><span class="line">--with-http_realip_module \</span><br><span class="line">--with-threads \</span><br><span class="line">--add-module=/path/to/ngx_http_proxy_connect_module</span><br></pre></td></tr></table></figure></p>
<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 启动</span><br><span class="line">systemctl start nginx</span><br><span class="line"># 查看状态</span><br><span class="line">systemctl status nginx</span><br><span class="line"># 停止</span><br><span class="line">systemctl stop nginx</span><br><span class="line"></span><br><span class="line"># 重载配置</span><br><span class="line">nginx -s reload</span><br><span class="line"># 测试配置是否正确</span><br><span class="line">nginx -t</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>niginx</tag>
      </tags>
  </entry>
  <entry>
    <title>图库</title>
    <url>/2021/05/20/%E5%9B%BE%E5%BA%93/</url>
    <content><![CDATA[<div class="gallery-group-main">    

  <figure class="gallery-group">
  <img class="gallery-group-img" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">壁纸</div>
  <p>二次元壁纸</p>
  <a href='/Gallery/wallpaper'></a>
  </figcaption>
  </figure>
  

  <figure class="gallery-group">
  <img class="gallery-group-img" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">海贼王</div>
  <p>One Piece</p>
  <a href='/Gallery/onepiece'></a>
  </figcaption>
  </figure>
  

  <figure class="gallery-group">
  <img class="gallery-group-img" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">从零开始的异界生活</div>
  <p>如果真爱有颜色</p>
  <a href='/Gallery/Re'></a>
  </figcaption>
  </figure>
  
</div>

]]></content>
  </entry>
  <entry>
    <title>win10去除快捷方式小箭头</title>
    <url>/2021/11/08/win10%E5%8E%BB%E9%99%A4%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F%E5%B0%8F%E7%AE%AD%E5%A4%B4/</url>
    <content><![CDATA[<h3 id="1-去掉小箭头"><a href="#1-去掉小箭头" class="headerlink" title="1.去掉小箭头"></a>1.去掉小箭头</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Icons&quot; /v 29 /d &quot;%systemroot%\system32\imageres.dll,197&quot; /t reg_sz /f</span><br><span class="line">taskkill /f /im explorer.exe</span><br><span class="line">attrib -s -r -h &quot;%userprofile%\AppData\Local\iconcache.db&quot;</span><br><span class="line">del &quot;%userprofile%\AppData\Local\iconcache.db&quot; /f /q</span><br><span class="line">start explorer</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<h3 id="2-恢复小箭头"><a href="#2-恢复小箭头" class="headerlink" title="2.恢复小箭头"></a>2.恢复小箭头</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reg delete &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Icons&quot; /v 29 /f</span><br><span class="line">taskkill /f /im explorer.exe</span><br><span class="line">attrib -s -r -h &quot;%userprofile%\AppData\Local\iconcache.db&quot;</span><br><span class="line">del &quot;%userprofile%\AppData\Local\iconcache.db&quot; /f /q</span><br><span class="line">start explorer</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<p>复制以上代码保存至.bat文件，管理员身份打开即可</p>
]]></content>
      <categories>
        <category>win10</category>
      </categories>
      <tags>
        <tag>win10</tag>
      </tags>
  </entry>
  <entry>
    <title>常用Linux命令</title>
    <url>/2021/09/24/%E5%B8%B8%E7%94%A8Linux%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="不定期更新Linux常用命令"><a href="#不定期更新Linux常用命令" class="headerlink" title="不定期更新Linux常用命令"></a>不定期更新Linux常用命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -nultp   //查看端口占用情况</span><br><span class="line">nohup sh startup.sh -m standalone &amp; //启动nacos</span><br><span class="line">chmod -R 777 /** //Linux修改文件操作权限命令</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --name seata-server -d \</span><br><span class="line">       -p 8091:8091 \</span><br><span class="line">       -e SEATA_IP=120.76.137.203 \</span><br><span class="line">       -e SEATA_PORT=8091 \</span><br><span class="line">       -e SEATA_CONFIG_NAME=file:/root/seata-config/registry \</span><br><span class="line">       -v /mydata/seata/config:/root/seata-config  \</span><br><span class="line">       -v /mydata/seata/logs:/root/logs \</span><br><span class="line">       --privileged=true \</span><br><span class="line">       seataio/seata-server:1.4.2</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>测试</title>
    <url>/2021/05/14/%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h2 id="删除多余网络连接"><a href="#删除多余网络连接" class="headerlink" title="删除多余网络连接"></a>删除多余网络连接</h2><p>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\NetworkList\Profiles</p>
<h2 id="解决打开人人开源fast-vue报错"><a href="#解决打开人人开源fast-vue报错" class="headerlink" title="解决打开人人开源fast-vue报错"></a>解决打开人人开源fast-vue报错</h2><p>node-sass使用6.0.1</p>
<h3 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h3><p>git fetch 从远程获取最新版本到本地，不会自动merge<br>git pull 从远程获取最新版本到本地，并自动merge </p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
  </entry>
  <entry>
    <title>随意笔记</title>
    <url>/2021/05/20/%E9%9A%8F%E6%84%8F%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="算法练习"><a href="#算法练习" class="headerlink" title="算法练习"></a>算法练习</h1><h2 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h2><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort</span><span class="params">(<span class="keyword">int</span> arr[],<span class="keyword">int</span> length)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length - <span class="number">1</span>; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> isSort = <span class="number">1</span>; <span class="comment">//假设已经排好序</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; i &lt; count - <span class="number">1</span> - i; ++i)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (arr[j] &gt; arr[j+<span class="number">1</span>])</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> temp = arr[j]; <span class="comment">//如果arr[j]&gt;arr[j+1]，两者交换位置</span></span><br><span class="line">				arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">				arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">				isSort = <span class="number">0</span>; <span class="comment">// 如果有一轮交换了位置,isSort置0</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (isSort == <span class="number">1</span>) <span class="comment">//如果这一轮都没有元素交换位置,说明后面的元素已经排好序</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SelectSort</span><span class="params">(<span class="keyword">int</span> arr[],<span class="keyword">int</span> length)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> min = i; <span class="comment">//假设第i个元素为最小值</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; i &lt; length; ++i)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (arr[j] &lt; arr[min])</span><br><span class="line">			&#123;</span><br><span class="line">				min = j; <span class="comment">//更小元素的下标</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> temp = arr[i]; </span><br><span class="line">		arr[i] = arr[min];</span><br><span class="line">		arr[min] = temp;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertSort</span><span class="params">(<span class="keyword">int</span> arr[] ,<span class="keyword">int</span> length)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; length; ++i) <span class="comment">//i为将要插入的元素，</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> value = arr[i];</span><br><span class="line">		<span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; --j)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (arr[j] &gt; value)</span><br><span class="line">			&#123;</span><br><span class="line">				arr[j+<span class="number">1</span>] = arr[j];  </span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="keyword">break</span>; <span class="comment">//第j个元素小于或等于value，跳出循环</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		arr[j+<span class="number">1</span>] = value;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>练习</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>练习</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker下安装mysql</title>
    <url>/2022/05/07/Docker%E4%B8%8B%E5%AE%89%E8%A3%85php/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -v /mydata/nginx/www:/var/www/html -p 9000:9000 --name php-7.4 php:7.4-fpm</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
</search>
